---
# reloading systemd configuration
- name: systemd daemon reload
  command: /bin/systemctl daemon-reload

# enabling and starting grafana-server
- name: enable and start grafana-server service
  systemd:
   name: grafana-server
   enabled: yes
   state: started

# getting datasources configured
- name: get datasources
  uri:
    HEADER_Content-Type: application/json
    url: http://localhost:{{ grafana_port }}/api/datasources
    method: GET
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    force_basic_auth: yes
  register: datasources
  when: grafana_datasource is defined

- name: set datasource fact
  set_fact:
    grafana_list_datasources: "{{ datasources.json | default([]) | map(attribute='name') | list }}"

# adding prometheus data source to grafana
- name: adding prometheus data source to grafana
  uri:
    HEADER_Content-Type: application/json
    url: http://localhost:{{ grafana_port }}/api/datasources 
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    body: "{{ grafana_datasource | to_json }}"
    body_format: json
    force_basic_auth: yes
  register: result
  changed_when: result.status == 200
  when: grafana_datasource is defined and grafana_datasource.name not in grafana_list_datasources


# importing instrumentation, inventory and post statistics dashboards json files to grafana
- name: importing grafana dashboards through API
  uri:
    url: "http://localhost:{{ grafana_port }}/api/dashboards/db"
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_password }}"
    force_basic_auth: yes
    body_format: json
    body: >
      {
        "dashboard": {{ lookup("file", item) }},
        "overwrite": true,
        "message": "Updated by ansible"
      }
  no_log: false
  with_fileglob:
    - "files/*.json"
